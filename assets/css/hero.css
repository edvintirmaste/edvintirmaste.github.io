/* Edvin Portfolio â€” hero.css (v29.13)
   Scope: Split hero (50/50 halves), corner intros with rails, mid divider glow,
          edge chevrons, comet marker.
   This version preserves the master playbook behavior and adds a single
   alignment control so the two intro cards align top & bottom on desktop.
*/

/* ===== Local hero tokens (uses globals from base.css) ===== */
#hero{
  /* lock both corner-intro cards to the same height on desktop; tweak to taste */
  --intro-lock-h: 12lh;

  /* vertical padding inside each card (applied to text container) */
  --intro-pad: 18px;

  /* edge chevron look (indigo/blue-purple family) */
  --edge-halo-opacity: .10;
  --edge-glow-opacity: .14;
  --edge-stroke: #6a6af7;
  --edge-lift: 22%;
  --edge-lift-hover: 30%;
  --edge-stroke-w: 3.6;
}

/* ===== Hero wrapper ===== */
.hero{ position:relative; }

/* Content-only vertical shift (keeps hover frost coverage intact) */
.hero { --hero-shift: 10vh; }
.hero .half > * { transform: translateY(var(--hero-shift)); }
.hero .corner-intro { transform: translateY(var(--hero-shift)); }

/* Responsive reductions for the shift */
@media (max-width:1200px){ .hero{ --hero-shift: 8vh; } }
@media (max-width: 900px){ .hero{ --hero-shift: 0; } }
@media (max-width: 700px){ .hero{ --hero-shift: 0; } }

/* ===== Split layout (the two 50/50 panels) ===== */
.split-50{
  display:grid;
  grid-template-columns: 1fr 1fr;
  align-items:stretch;
  position:relative;
}

/* mid divider line + subtle glow (center of viewport) */
.split-50::before{
  content:"";
  position:absolute; inset:0;
  background:
    linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,var(--divider-opacity)), rgba(255,255,255,0))
      50% 50% / 1px 80% no-repeat;
  pointer-events:none;
}
.split-50::after{
  content:"";
  position:absolute; inset:0;
  background:
    radial-gradient(30% 100% at 50% 50%, rgba(186,205,255,.22), rgba(0,0,0,0) 70%);
  filter: blur(var(--divider-glow-blur));
  opacity: .6;
  pointer-events:none;
}

/* ===== Clickable halves (Photography / Videography) ===== */
.half{
  display:flex; align-items:center; justify-content:center; flex-direction:column; gap:12px;
  inline-size:100%; block-size:100%; text-decoration:none; color:var(--fg);
  background: transparent; -webkit-backdrop-filter: none; backdrop-filter: none;
  transition: background-color .25s ease, backdrop-filter .25s ease, transform .25s ease, box-shadow .25s ease, opacity .25s ease;
  position:relative; isolation:isolate; padding: 0 clamp(18px, 3.5vw, 48px);
}
.half:hover{
  background: var(--frost-bg);
  -webkit-backdrop-filter: blur(var(--frost-blur)) saturate(115%);
  backdrop-filter: blur(var(--frost-blur)) saturate(115%);
  box-shadow: var(--frost-shadow);
}

/* ===== Corner intro cards (left/right) =====
   Absolutely positioned frosted cards with vertical rails.
   We lock their heights to the same value so tops & bottoms align.
*/
.corner-intro{
  position:absolute;
  top: var(--intro-top);
  width: min(92vw, var(--intro-width));
  max-width: var(--intro-width);
  padding: var(--intro-pad) calc(var(--intro-rail-gap) + var(--intro-rail-w));
  color: var(--fg);
  background: var(--frost-bg);
  -webkit-backdrop-filter: blur(var(--frost-blur)) saturate(var(--frost-sat));
  backdrop-filter: blur(var(--frost-blur)) saturate(var(--frost-sat));
  border-radius: 16px;
  box-shadow: var(--frost-shadow);
  /* === Alignment lock: same height for both cards on desktop === */
  min-block-size: var(--intro-lock-h);
  block-size: var(--intro-lock-h);
  display:flex; flex-direction:column; justify-content:center;
}

/* keep text off the rails on both sides */
.corner-intro{ 
  padding-left:  calc(var(--intro-rail-gap) + var(--intro-rail-w));
  padding-right: calc(var(--intro-rail-gap) + var(--intro-rail-w));
}

/* side placement */
.corner-intro.left  { left:  calc(50% - var(--intro-gap) - var(--intro-width));  text-align-last:left; }
.corner-intro.right { right: calc(50% - var(--intro-gap) - var(--intro-width));  text-align-last:right; }

/* Rails: equal length and centered on the text block */
.corner-intro::before,
.corner-intro::after{
  content:""; position:absolute; width: calc(var(--intro-glow-w) + var(--intro-rail-w));
  block-size: var(--rail-height);
  top: calc(50% + var(--rail-offset)); transform: translateY(-50%);
  pointer-events:none; background-repeat:no-repeat;
}
.corner-intro::before{
  left:0;
  background:
    linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,var(--intro-rail-alpha)), rgba(255,255,255,0))
      left center / var(--intro-rail-w) 100% no-repeat,
    radial-gradient(100% 60% at left center, rgba(var(--brand-glow1-rgb), .22) 0, rgba(0,0,0,0) 65%);
}
.corner-intro::after{
  right:0;
  background:
    linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,var(--intro-rail-alpha)), rgba(255,255,255,0))
      right center / var(--intro-rail-w) 100% no-repeat,
    radial-gradient(100% 60% at right center, rgba(var(--brand-glow2-rgb), .22) 0, rgba(0,0,0,0) 65%);
}

/* Normalize inner text margins (prevents micro drift between panels) */
.corner-intro :is(p, ul, ol){ margin-block: .6em; }
.corner-intro :is(p:first-child){ margin-block-start: 0; }
.corner-intro :is(p:last-child){  margin-block-end: 0; }

/* ===== Icon-only edge controls (chevrons) ===== */
.hero .edge{
  position:absolute;
  top: calc(50% - var(--header-h) / 2);        /* viewport-true center */
  transform: translateY(-50%);
  z-index:2;
  width:64px; height:64px;
  pointer-events:auto; cursor:pointer;
}

/* halo + glow */
.hero .edge::before,
.hero .edge::after{
  content:"";
  position:absolute; inset:50% auto auto 50%;
  transform: translate(-50%,-50%);
  border-radius:50%;
  pointer-events:none;
}
.hero .edge::before{
  width:72px; height:72px;
  background: radial-gradient(closest-side, rgba(255,255,255,.6), rgba(255,255,255,0) 75%);
  filter: blur(8px);
  opacity: var(--edge-halo-opacity);
}
.hero .edge::after{
  width:96px; height:96px;
  background: radial-gradient(closest-side, rgba(102,120,255,.22), rgba(0,0,0,0) 70%);
  filter: blur(10px);
  opacity: var(--edge-glow-opacity);
}

/* svg chevrons */
.hero .edge svg{
  width:100%; height:100%;
  display:block;
  stroke: color-mix(in srgb, var(--edge-stroke) calc(100% - var(--edge-lift)), #fff var(--edge-lift));
  stroke-width: var(--edge-stroke-w);
  fill:none; stroke-linecap:round; stroke-linejoin:round;
  transition: transform .2s ease, filter .2s ease, opacity .2s ease;
  filter: drop-shadow(0 1px 2px rgba(0,0,0,.6)) drop-shadow(0 6px 15px rgba(0,0,0,.30));
}
.hero .edge:hover svg{
  stroke: color-mix(in srgb, var(--edge-stroke) calc(100% - var(--edge-lift-hover)), #fff var(--edge-lift-hover));
  transform: scale(1.04);
}

/* handy positions */
.edge-left{ left: clamp(10px, 3vw, 32px); }
.edge-right{ right: clamp(10px, 3vw, 32px); }

/* ===== Comet (static) ===== */
.hero::after{
  /* tweak these if needed */
  --comet-size: clamp(80px, 8vw, 120px);
  --comet-bottom: clamp(14px, 2.2vw, 30px);
  --comet-rot: 200deg; /* pointing downward */

  content:"";
  position:absolute; left:50%; bottom:var(--comet-bottom);
  inline-size: var(--comet-size); aspect-ratio:1/1;
  transform: translateX(-50%) rotate(var(--comet-rot));
  background: center / contain no-repeat url('../comet.svg');
  pointer-events:none;
}

/* ===== Responsive (hero only) ===== */
@media (max-width: 900px){
  .corner-intro{
    position:static; margin: 10px 16px 0;
    width: min(92vw, var(--intro-width));
    text-align:left; text-align-last:left;
    background: none; border-radius: 0;
    padding: 0;
    /* unlock the fixed height on mobile for readability */
    block-size: auto; min-block-size: 0;
  }
  .corner-intro::before, .corner-intro::after{ display:none; }
  .split-50{ grid-template-columns: 1fr; grid-template-rows: 1fr 1fr; }
  .split-50::after, .split-50::before{ display:none; }
  .edge-left{ left:10px } .edge-right{ right:10px }
  .bullets{ min-height: 0; }

  /* slightly smaller icons on narrow screens */
  .hero .edge{ width:56px; height:56px; }
  .hero .edge::before{ width:62px; height:62px; }
  .hero .edge::after{  width:84px; height:84px; }
}
